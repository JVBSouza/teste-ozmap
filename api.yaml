swagger: "2.0"
info:
  description: "This API was developed for the OZmap intership test. Refer to the [repository](https://github.com/JVBSouza/teste-ozmap/) for more information"
  version: "1.0.0"
  title: "User management API"
host: "localhost:3000"
tags:
- name: "user"
  description: "Operations about user"
schemes:
- "http"
paths:
  /users:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This create a new user and insert into the database."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
    get:
      tags:
      - "user"
      summary: "Get list of users"
      description: "Get the list of the users in the datavase."
      operationId: "getAllUsers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"   
  /users/{name}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUser"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name that needs to be fetched."
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "404":
          description: "User not found"
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: ""
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "Name of the user that will be updated."
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "User updated"
          schema:
            $ref: "#/definitions/User"
        "404":
          description: "User not found"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name of the user that will be deleted"
        required: true
        type: "string"
      responses:
        "204":
          description: "User deleted"
        "404":
          description: "User not found"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
      age:
        type: "integer"
        format: "int32"
